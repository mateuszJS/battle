import getTexture from '~/getTexture'
import fragmentShader from './fragment.frag'
import vertexShader from './vertex.vert'

let shader: PIXI.Shader

const getInfluenceAndVulnerabilityMap = (
  influenceMap: PIXI.RenderTexture,
  tensionMap: PIXI.RenderTexture,
  geometry: PIXI.Geometry,
  mapWidth: number,
  mapHeight: number,
) => {
  if (!shader) {
    shader = PIXI.Shader.from(vertexShader, fragmentShader)
  }

  shader.uniforms.uInfluenceSample2 = influenceMap
  shader.uniforms.uTensionSample2 = tensionMap
  const mesh = new PIXI.Mesh(geometry, shader as PIXI.MeshMaterial)
  return getTexture(mesh, mapWidth, mapHeight)
}

export default getInfluenceAndVulnerabilityMap
