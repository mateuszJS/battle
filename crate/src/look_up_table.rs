use std::sync::atomic::{AtomicUsize, Ordering};

const LUT_LENGTH: usize = 128;
static LUT: [f32; LUT_LENGTH] = [
  0.6138456315822904,
  0.780763867328224,
  0.521527632732842,
  0.43745591380829985,
  0.06726097840827938,
  0.6818982140789658,
  0.3940957613736493,
  0.4361626682142121,
  0.2683231010959861,
  0.8235096902519368,
  0.8971151652663745,
  0.66624589169781,
  0.12894873979654675,
  0.7425381194832443,
  0.5841927577745665,
  0.38435218109821,
  0.5450665801493231,
  0.4168259517045092,
  0.9076030298105888,
  0.60935939525925,
  0.7352174294962472,
  0.5077088653068327,
  0.3323449384671502,
  0.9938816030095812,
  0.13496751057191192,
  0.754177703499586,
  0.38354033310898084,
  0.27998899136482747,
  0.6212286625708245,
  0.9046033915109795,
  0.8158833571965698,
  0.31805222022086665,
  0.603128684598242,
  0.8155434261032852,
  0.1262918016679868,
  0.2091512405773639,
  0.7986703932618016,
  0.2155931958953332,
  0.488613668045222,
  0.3996167389736467,
  0.49226980161239564,
  0.7843813675082674,
  0.9500788775919111,
  0.912391998994176,
  0.6091948157971334,
  0.7810164343504542,
  0.9287370079057042,
  0.44864718286336536,
  0.18071278247271838,
  0.3542373209326797,
  0.6463197253641699,
  0.4173517921255385,
  0.8357317570194556,
  0.5906737037351981,
  0.23688775225387704,
  0.10318859758271537,
  0.450220267083838,
  0.9793111773308594,
  0.04685562944267674,
  0.5109603942922574,
  0.5151785662493273,
  0.816510535853296,
  0.3366516850847814,
  0.9390087683181658,
  0.9239641776159104,
  0.8732487873189689,
  0.4919156203612134,
  0.17737705216098587,
  0.08929089008113955,
  0.7099934287569831,
  0.6207469990203143,
  0.03985501876833952,
  0.06736988103849728,
  0.5632908992685077,
  0.20210190987610477,
  0.26221524210994906,
  0.10516469666674877,
  0.05579606793629455,
  0.5849857932864719,
  0.20832845344810025,
  0.2933999496079165,
  0.910624812982485,
  0.5040596886695425,
  0.8939741313514726,
  0.6173872928417727,
  0.5794025578178326,
  0.10407901600824943,
  0.5337451725874056,
  0.18016835865387604,
  0.8590065824601882,
  0.6408409261894541,
  0.8461980406603742,
  0.32502653431316597,
  0.5219247406494589,
  0.7511530029075224,
  0.5944285234347242,
  0.7375209204217319,
  0.5840831628960876,
  0.4505322399169429,
  0.3165484330844477,
  0.8824479299206542,
  0.03174933453860129,
  0.23474321785209695,
  0.32732253146953383,
  0.31268170468791023,
  0.8309565593828048,
  0.9096317796204074,
  0.534966433696582,
  0.4607117277904227,
  0.3638858348810643,
  0.20188475934269778,
  0.9619153257390638,
  0.834674604360685,
  0.6479776529829866,
  0.3511655524655839,
  0.65633312799251,
  0.6537719176802634,
  0.9116247772341259,
  0.38289894732616925,
  0.8291597809402624,
  0.05011066541587539,
  0.7350196115395369,
  0.7565529874175285,
  0.4851911075857689,
  0.8223592560361006,
  0.3086451150890386,
  0.40963422756061707,
  0.9113105305389286,
];
static INDEX: AtomicUsize = AtomicUsize::new(0);

pub struct LookUpTable {}

impl LookUpTable {
  pub fn initialize() {}

  pub fn get_random() -> f32 {
    // maybe better would be to use ::fetch_update (but it's experimental API)
    // https://doc.rust-lang.org/std/sync/atomic/struct.AtomicUsize.html#method.fetch_update
    let index = INDEX.load(Ordering::Relaxed);
    INDEX.store((index + 1) % LUT_LENGTH, Ordering::Relaxed);
    LUT[index]
  }
}
